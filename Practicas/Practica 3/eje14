// ---------------------------------------------------------------------
    // Main 
    String mensajeOriginal = "HOLA MUNDO";
        int [] clave = new int[] { 5, 3, 9, 7 };

        string mensajeCifrado = Cifrar(mensajeOriginal, clave);
        Console.WriteLine($"Mensaje cifrado: {mensajeCifrado}");

        string mensajeDescifrado = Descifrar(mensajeCifrado, clave);
        Console.WriteLine($"Mensaje descifrado: {mensajeDescifrado}");
// ---------------------------------------------------------------------
  // Metodos
    static string Cifrar(string mensaje, int[] clave)
    {
        Queue<int> queue = new Queue<int>(clave);
        StringBuilder mensajeCifrado = new StringBuilder();

        for (int i = 0; i < mensaje.Length; i++)
        {
            char c = mensaje[i];
            if (c == ' ')
            {
                mensajeCifrado.Append(' ');
            }
            else
            {
                int asciiValue = Char.ToUpper(c) - 'A' + 1; // Convertir a valor ASCII y ajustar a la tabla
                int cifrado = (asciiValue + queue.Peek()) % 28; // Aplicar el desplazamiento

                mensajeCifrado.Append((char)(cifrado + 'A' - 1)); // Convertir a carácter y ajustar a la tabla
                queue.Enqueue(queue.Dequeue()); // Volver a encolar el primer elemento
            }
        }

        return mensajeCifrado.ToString();
    }

    static string Descifrar(string mensajeCifrado, int[] clave)
    {
        Queue<int> queue = new Queue<int>(clave);
        StringBuilder mensajeDescifrado = new StringBuilder();

        for (int i = 0; i < mensajeCifrado.Length; i++)
        {
            char c = mensajeCifrado[i];
            if (c == ' ')
            {
                mensajeDescifrado.Append(' ');
            }
            else
            {
                int asciiValue = Char.ToUpper(c) - 'A' + 1; // Convertir a valor ASCII y ajustar a la tabla
                int descifrado = (asciiValue - queue.Peek() + 28) % 28; // Aplicar el desplazamiento inverso

                mensajeDescifrado.Append((char)(descifrado + 'A' - 1)); // Convertir a carácter y ajustar a la tabla
                queue.Enqueue(queue.Dequeue()); // Volver a encolar el primer elemento
            }
        }

        return mensajeDescifrado.ToString();
    }
 // ---------------------------------------------------------------------       