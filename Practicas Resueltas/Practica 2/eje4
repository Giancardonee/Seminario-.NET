        object o = "Hola Mundo!";
        string  st = o as string; 
        /* nos tira un warning porque o podria ser nulo, pero vemos anteriormente que 
        la variabe o e inicializo con la cadena "Hola Mundo!"
        si no conocemos el valor previamente de la variable objeto, es recomendable usar: 
        string? st = o as string; De esta manera, eliminamos el posible error, ya que 
        el dato string? acepta valores nulos o nullable 
        */
        int i = 12;
        byte b = (byte)i; 
        /*
            convertimos un tipo int en byte, pero esto puede generar perdida de datos, si el dato 
            a convertir no entra en 1 byte.
            Es decir, el tipo de dato byte, tiene la capacidad de almacenar valores sin signo entre
            0 y 255. En este caso, i entra tranquilamente en un byte. Pero si tuvieramos un numero mayor,
            se generaria la perdida de datos. 
        */
        double d = i;
        float f = (float)d;
        /* 
            Se puede producir una pequeÃ±a perdida de precision el el valor, ya que el doublea lmacena
            64 bits, y el float almacena 32 bits. Es decir, el double tiene el doble de la capacidad de float.
            La operacion se puede realizar mediante un casteo explicito, pero teniendo en cuenta que podria perderse
            precision por la cantidad de bits que almacena cada dato. 
        */ 


        o = i;
        i = o + 1 ; == > este nose, me arrruino 