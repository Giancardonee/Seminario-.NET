 Foo f = new Foo();
 f.Imprimir();
class Foo
 {
 string? _bar;
 public void Imprimir()
 { 
 Console.WriteLine(_bar.Length);
 }
 }


 Foo f = new Foo();
f.Imprimir();
class Foo
 {
 public void Imprimir()
 { 
 string? bar;
 Console.WriteLine(bar.Length);
 }
 }

¿Qué se puede decir acerca de la inicialización de los objetos? 
¿En qué casos son inicializados automáticamente y con qué valor?

En ambos casos se usa el constructor por defecto que ofrece .net para instanciar 
el objeto. De esta manera se crea una instancia de el objeto Foo sin parametros.

En el primer caso:  caso, _bar es un campo de clase, y al no inicializarlo explícitamente, 
su valor predeterminado será null ya que es una referencia de tipo string?. 
Por lo tanto, cuando se llama al método Imprimir, se lanzará una excepción
 de NullReferenceException en la línea Console.WriteLine(_bar.Length)
  ya que se está intentando acceder a la propiedad Length de una referencia nula.

En el segundo caso: bar es una variable local del método Imprimir.
 Las variables locales no se inicializan automáticamente
  por lo que su valor inicial será null para tipos de referencia, como en este caso. 
  Al intentar acceder a la propiedad Length de bar sin asignarle un valor previo, 
  se lanzará una excepción de NullReferenceException similar a la primera versión.