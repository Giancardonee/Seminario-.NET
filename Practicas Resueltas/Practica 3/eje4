// -----------------------------------------------------------
// Esto va en el main.
  // Creamos una matriz 
        double [,] matriz = new double[,]
        {
            {1,4,4,2}, 
            {4,1,2,4}, 
            {4,2,1,4},
            {2,4,4,1}
        };
        // Creamos los dos vectores que quiero que devuelva 
        double [] vDiagPrincipal,vDiagSecundaria; 
        // bloque try - catch
        try{
            chequearMatriz(matriz);
            vDiagPrincipal = getDiagonalPrincipal(matriz); 
            vDiagSecundaria = getDiagonalSecundaria(matriz);
            imprimirVector(vDiagPrincipal);
            imprimirVector(vDiagSecundaria);
        }
        catch (ArgumentException e){
            Console.WriteLine(e.Message);
        }
// -----------------------------------------------------------
// Metodos.

static double [] getDiagonalPrincipal (double[,] m){
        int tam = m.GetLength(0);
        double [] vectorReturn = new double[tam];
        for (int i=0; i < tam; i++){
            vectorReturn[i] = m[i,i];
        }
    return vectorReturn;
    }

    static double [] getDiagonalSecundaria (double [,]m){
        int tam = m.GetLength(0); 
        double [] vectorReturn = new double[tam];
        int c = tam-1; // ==>> agarramos el INDICE de la ultima columna
        for (int i=0; i < tam; i++){
            vectorReturn[i] = m[i,c]; 
            c--;
        }
    return vectorReturn;
    }

    static void chequearMatriz(double [,] matriz){
        int fila = matriz.GetLength(0); 
        int columna = matriz.GetLength(1);
        if ( fila != columna){
            throw new ArgumentException("La matriz no es cuadrada.");
        }
      }

    static void imprimirVector (double [] vec){
        for (int i=0; i < vec.Length; i++){
            Console.Write(vec[i]+" ");
        }
        Console.WriteLine();
    }

// -----------------------------------------------------------